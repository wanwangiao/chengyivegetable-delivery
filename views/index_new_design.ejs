<!DOCTYPE html>
<html lang="zh-TW">
<head>
  <meta charset="utf-8"/>
  <link crossorigin="" href="https://fonts.gstatic.com/" rel="preconnect"/>
  <link as="style" href="https://fonts.googleapis.com/css2?display=swap&family=Noto+Sans+TC:wght@400;500;700&family=Space+Grotesk:wght@400;500;700" onload="this.rel='stylesheet'" rel="stylesheet"/>
  <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet"/>
  <title>誠憶鮮蔬</title>
  <link href="data:image/x-icon;base64," rel="icon" type="image/x-icon"/>
  <script src="https://cdn.tailwindcss.com?plugins=forms,container-queries"></script>
  
  <!-- PWA 設定 -->
  <meta name="theme-color" content="#22c55e">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="default">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
  
  <style type="text/tailwindcss">
    :root {
      --primary-color: #22c55e;
    }
    body {
      font-family: 'Noto Sans TC', 'Space Grotesk', sans-serif;
    }
  </style>
  <style>
    body {
      min-height: max(884px, 100dvh);
    }
    .product-item {
      transition: all 0.3s ease-in-out;
      opacity: 1;
    }
    .product-item:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    }
    .product-image {
      aspect-ratio: 1;
      width: 100%;
      object-fit: cover;
    }
    
    /* 搜尋功能相關樣式 */
    #product-search {
      transition: all 0.2s ease-in-out;
    }
    
    #product-search:focus {
      transform: scale(1.02);
      box-shadow: 0 4px 12px rgba(34, 197, 94, 0.15);
    }
    
    .nav-btn {
      transition: all 0.2s ease-in-out;
      cursor: pointer;
      border: none;
      background: none;
    }
    
    .nav-btn:hover {
      transform: translateY(-1px);
    }
    
    .nav-btn.active {
      animation: pulse-green 2s infinite;
    }
    
    @keyframes pulse-green {
      0%, 100% {
        opacity: 1;
      }
      50% {
        opacity: 0.8;
      }
    }
    
    /* 無結果提示動畫 */
    #no-results-message {
      animation: fadeInUp 0.5s ease-out;
    }
    
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    /* 搜尋結果資訊動畫 */
    #search-info {
      transition: all 0.3s ease-in-out;
    }
    
    /* 清除按鈕動畫 */
    #clear-search-btn {
      transition: all 0.2s ease-in-out;
    }
    
    #clear-search-btn:hover {
      transform: scale(1.1);
    }
    
    /* 商品項目顯示動畫 */
    .product-item[style*="display: block"] {
      animation: fadeInScale 0.4s ease-out;
    }
    
    @keyframes fadeInScale {
      from {
        opacity: 0;
        transform: scale(0.95);
      }
      to {
        opacity: 1;
        transform: scale(1);
      }
    }
    
    /* 手機端優化 */
    @media (max-width: 768px) {
      #product-search {
        font-size: 16px; /* 防止iOS縮放 */
      }
      
      .nav-btn {
        min-width: 80px;
        white-space: nowrap;
      }
    }
    
    /* 高對比度模式支援 */
    @media (prefers-contrast: high) {
      .product-item {
        border: 2px solid #333;
      }
      
      #product-search {
        border: 2px solid #333;
      }
    }
    
    /* 減少動畫偏好支援 */
    @media (prefers-reduced-motion: reduce) {
      .product-item,
      .nav-btn,
      #product-search,
      #clear-search-btn {
        transition: none;
      }
      
      .nav-btn.active {
        animation: none;
      }
      
      #no-results-message,
      .product-item[style*="display: block"] {
        animation: none;
      }
    }
  </style>
</head>

<body class="bg-gray-50 text-gray-800">
<div class="relative flex size-full min-h-screen flex-col">
  <!-- Header -->
  <header class="relative">
    <!-- 大圖片區域 - 滾動時會被隱藏 -->
    <div class="relative w-full h-48 bg-center bg-no-repeat bg-cover" id="hero-banner" style='background-image: url("<%= settings.banner_image_url %>");'>
      <div class="absolute inset-0 bg-black bg-opacity-40 flex flex-col justify-end p-4">
        <h1 class="text-white text-3xl font-bold"><%= settings.store_name %></h1>
        <div class="flex items-center text-white text-sm mt-1">
          <span class="material-symbols-outlined text-base mr-1">visibility</span>
          <span>1,234 次查看</span>
          <a class="ml-auto bg-white/20 backdrop-blur-sm text-white py-1 px-3 rounded-full text-sm font-medium hover:bg-white/30 transition-colors" href="#">店家資訊</a>
        </div>
      </div>
    </div>
    
    <!-- 導航區域 - sticky -->
    <div class="sticky top-0 bg-white z-10 shadow-sm">
      <div class="overflow-x-auto whitespace-nowrap border-b border-gray-200">
        <nav class="flex px-4">
          <button class="nav-btn flex flex-col items-center justify-center border-b-2 border-green-500 text-green-600 px-4 py-3 text-sm font-semibold active" data-category="all" onclick="filterProducts('all')">全部商品</button>
          <button class="nav-btn flex flex-col items-center justify-center border-b-2 border-transparent text-gray-500 hover:text-green-600 hover:border-green-500 px-4 py-3 text-sm font-medium transition-colors" data-category="new" onclick="filterProducts('new')">最新商品</button>
          <button class="nav-btn flex flex-col items-center justify-center border-b-2 border-transparent text-gray-500 hover:text-green-600 hover:border-green-500 px-4 py-3 text-sm font-medium transition-colors" data-category="hot" onclick="filterProducts('hot')">熱銷商品</button>
          <button class="nav-btn flex flex-col items-center justify-center border-b-2 border-transparent text-gray-500 hover:text-green-600 hover:border-green-500 px-4 py-3 text-sm font-medium transition-colors" data-category="recommended" onclick="filterProducts('recommended')">最佳推薦</button>
          <button class="nav-btn flex flex-col items-center justify-center border-b-2 border-transparent text-gray-500 hover:text-green-600 hover:border-green-500 px-4 py-3 text-sm font-medium transition-colors" data-category="sale" onclick="filterProducts('sale')">限時特惠</button>
        </nav>
      </div>
      
      <!-- 搜尋框區域 -->
      <div class="px-4 py-3 bg-gray-50 border-b border-gray-200">
        <div class="relative">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <span class="material-symbols-outlined text-gray-400">search</span>
          </div>
          <input 
            type="text" 
            id="product-search" 
            placeholder="搜尋商品名稱..." 
            class="w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg bg-white focus:ring-2 focus:ring-green-500 focus:border-green-500 text-sm"
            autocomplete="off"
            oninput="searchProducts(this.value)"
            onkeypress="handleSearchKeypress(event)"
          >
          <button 
            id="clear-search-btn"
            onclick="clearSearch()"
            class="absolute inset-y-0 right-0 pr-3 flex items-center opacity-0 transition-opacity duration-200 pointer-events-none"
          >
            <span class="material-symbols-outlined text-gray-400 hover:text-gray-600 cursor-pointer">close</span>
          </button>
        </div>
        
        <!-- 搜尋結果資訊 -->
        <div id="search-info" class="mt-2 text-sm text-gray-600 hidden">
          <span id="search-result-count">找到 0 項商品</span>
          <button onclick="clearSearch()" class="ml-2 text-green-600 hover:text-green-700 underline">清除搜尋</button>
        </div>
      </div>
    </div>
  </header>

  <!-- 📢 訂單時間橫幅 -->
  <div class="order-time-banner sticky top-0 z-20 px-4 py-2 text-center text-sm font-medium transition-all duration-300" id="order-time-banner">
    <span id="order-time-message">載入中...</span>
  </div>

  <!-- 📢 訂單時間彈窗 -->
  <div class="fixed inset-0 bg-black/50 z-50 hidden items-center justify-center" id="order-time-popup">
    <div class="bg-white rounded-2xl shadow-lg p-6 mx-4 max-w-sm w-full">
      <div class="text-center">
        <div class="text-4xl mb-4" id="popup-time-icon">⏰</div>
        <h3 class="text-lg font-bold text-gray-900 mb-2" id="popup-time-title">訂單時間提醒</h3>
        <p class="text-gray-600 mb-6" id="popup-time-desc">載入中...</p>
        <button class="w-full bg-green-500 text-white py-3 px-4 rounded-lg font-medium hover:bg-green-600 transition-colors" onclick="closeOrderTimePopup()">
          我知道了
        </button>
      </div>
    </div>
  </div>

  <!-- Main Content -->
  <main class="flex-grow pb-32">
    <!-- 重要公告 -->
    <section class="bg-white p-4 my-4 rounded-lg shadow-sm mx-4">
      <h2 class="text-lg font-bold text-gray-900 mb-2">重要公告</h2>
      <div class="space-y-2 text-sm text-gray-600">
        <%- settings.announcement_content %>
      </div>
    </section>

    <!-- 商品列表 - 新的橫向佈局 -->
    <section class="px-4">
      <div class="space-y-4" id="products-container">
        <% if (products && products.length > 0) { %>
          <% products.forEach((product, index) => { %>
            <% 
              // 根據商品索引和名稱決定分類
              let categories = ['all'];
              if (index === 0) categories.push('hot'); // 第一個商品標記為熱銷
              if (index <= 2) categories.push('new'); // 前三個商品標記為最新
              if (index % 3 === 0) categories.push('recommended'); // 每三個商品標記為推薦
              if (product.name.includes('特價') || product.name.includes('優惠')) categories.push('sale');
              
              // 建立可搜尋的文字（移除表情符號）
              let searchableText = product.name.replace(/[\u{1F300}-\u{1F9FF}]/gu, '').trim();
            %>
            <!-- 商品項目 - 橫向佈局 -->
            <div class="bg-white rounded-lg shadow-sm overflow-hidden product-item cursor-pointer" 
                 data-category="<%= categories.join(' ') %>"
                 data-name="<%= product.name %>"
                 data-searchable="<%= searchableText.toLowerCase() %>"
                 data-index="<%= index %>"
                 onclick="openProductModal('<%= product.id %>', '<%= product.name %>', '<%= product.price %>', '<%= product.unit_hint || "" %>', '<%= product.is_priced_item %>')">
              <div class="flex">
                <!-- 左側圖片 (1/3) -->
                <div class="w-1/3 relative">
                  <img alt="<%= product.name %>" 
                       class="product-image" 
                       src="<%= product.image_url || 'https://images.unsplash.com/photo-1542838132-92c53300491e?w=400&h=400&fit=crop&crop=center' %>"
                       loading="lazy">
                  <% if (index === 0) { %>
                    <span class="absolute top-2 left-2 bg-red-500 text-white text-xs font-semibold px-2 py-1 rounded-full">熱銷</span>
                  <% } else if (index === 2) { %>
                    <span class="absolute top-2 left-2 bg-blue-500 text-white text-xs font-semibold px-2 py-1 rounded-full">新品</span>
                  <% } %>
                </div>
                
                <!-- 右側商品資訊 (2/3) -->
                <div class="w-2/3 p-4 flex flex-col justify-between">
                  <div class="flex-grow">
                    <!-- 商品名稱 -->
                    <h3 class="font-semibold text-gray-800 text-lg mb-2"><%= getProductEmoji(product.name) %> <%= product.name %></h3>
                    
                    <!-- 商品說明 -->
                    <p class="text-sm text-gray-500 mb-3 line-clamp-2">
                      <% if (product.name.includes('番茄')) { %>
                        來自陽光充足的農場，多汁甜美。
                      <% } else if (product.name.includes('高麗菜')) { %>
                        清脆爽口，口感極佳。
                      <% } else if (product.name.includes('胡蘿蔔')) { %>
                        營養豐富，天然甜味。
                      <% } else if (product.name.includes('青江菜')) { %>
                        每日現採，保證新鮮。
                      <% } else { %>
                        新鮮蔬果，品質保證。
                      <% } %>
                    </p>
                  </div>
                  
                  <!-- 價格和按鈕 -->
                  <div class="flex justify-between items-center">
                    <div>
                      <% if (product.is_priced_item) { %>
                        <p class="text-green-600 font-bold text-lg">時價 <span class="text-sm font-normal text-gray-500">/ <%= product.unit_hint || '份' %></span></p>
                      <% } else { %>
                        <p class="text-green-600 font-bold text-lg">$<%= product.price %> <span class="text-sm font-normal text-gray-500">/ <%= product.unit_hint || '份' %></span></p>
                      <% } %>
                    </div>
                    <button class="bg-green-500 text-white rounded-full w-10 h-10 flex items-center justify-center hover:bg-green-600 transition-colors" 
                            onclick="event.stopPropagation(); addToCart('<%= product.id %>', '<%= product.name %>', '<%= product.price %>', '<%= product.is_priced_item %>')">
                      <span class="material-symbols-outlined">add_shopping_cart</span>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          <% }) %>
        <% } else { %>
          <!-- 示範資料 -->
          <div class="bg-white rounded-lg shadow-sm overflow-hidden product-item cursor-pointer" 
               data-category="all hot recommended"
               data-name="有機番茄"
               data-searchable="有機番茄"
               data-index="0"
               onclick="openProductModal('demo1', '有機番茄', '60', '斤', false)">
            <div class="flex">
              <div class="w-1/3 relative">
                <img alt="有機番茄" class="product-image" src="https://images.unsplash.com/photo-1542838132-92c53300491e?w=400&h=400&fit=crop&crop=center">
                <span class="absolute top-2 left-2 bg-red-500 text-white text-xs font-semibold px-2 py-1 rounded-full">熱銷</span>
              </div>
              <div class="w-2/3 p-4 flex flex-col justify-between">
                <div class="flex-grow">
                  <h3 class="font-semibold text-gray-800 text-lg mb-2">🍅 有機番茄</h3>
                  <p class="text-sm text-gray-500 mb-3">來自陽光充足的農場，多汁甜美。</p>
                </div>
                <div class="flex justify-between items-center">
                  <p class="text-green-600 font-bold text-lg">$60 <span class="text-sm font-normal text-gray-500">/ 斤</span></p>
                  <button class="bg-green-500 text-white rounded-full w-10 h-10 flex items-center justify-center hover:bg-green-600 transition-colors" onclick="event.stopPropagation(); addToCart('demo1', '有機番茄', '60', false)">
                    <span class="material-symbols-outlined">add_shopping_cart</span>
                  </button>
                </div>
              </div>
            </div>
          </div>
        <% } %>
      </div>
    </section>
  </main>

  <!-- 訂單查詢按鈕 -->
  <button class="fixed bottom-24 right-4 bg-green-500 text-white px-4 py-2 rounded-full shadow-lg flex items-center gap-2 hover:bg-green-600 transition-all z-20" onclick="openOrderTrackingModal()">
    <span class="material-symbols-outlined">receipt_long</span>
    <span class="font-medium">訂單查詢</span>
  </button>

  <!-- 購物車底部 -->
  <footer class="fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 p-4 flex justify-between items-center shadow-top z-20" id="cart-footer">
    <div>
      <span class="text-gray-500">合計：</span>
      <span class="font-bold text-xl text-green-600" id="cart-total">$0</span>
    </div>
    <button class="bg-green-500 text-white font-bold py-3 px-6 rounded-full hover:bg-green-600 transition-colors flex items-center gap-2" id="checkout-btn" onclick="openCartModal()">
      <span class="material-symbols-outlined">shopping_cart_checkout</span>
      <span id="checkout-text">來去結帳 (0)</span>
    </button>
  </footer>
</div>

<!-- 商品詳情彈窗 -->
<div class="fixed inset-0 bg-gray-900/50 z-50 hidden" id="product-modal">
  <div class="relative mx-auto mt-4 mb-4 flex max-w-sm flex-col bg-white rounded-2xl max-h-[90vh] overflow-hidden">
    <!-- 關閉按鈕 -->
    <div class="absolute right-4 top-4 z-10">
      <button class="flex h-10 w-10 cursor-pointer items-center justify-center rounded-full bg-white/80 text-[#111811] transition-colors hover:bg-gray-200" onclick="closeProductModal()">
        <span class="material-symbols-outlined">close</span>
      </button>
    </div>
    
    <!-- 商品圖片 - 縮小高度 -->
    <div class="flex-shrink-0">
      <div class="w-full h-48 bg-cover bg-center bg-no-repeat" id="modal-image"></div>
    </div>
    
    <!-- 可滾動的內容區域 -->
    <div class="flex-grow overflow-y-auto">
      <div class="px-6 pt-5">
        <h1 class="text-2xl font-bold text-gray-900" id="modal-title">商品名稱</h1>
        <p class="pt-2 text-gray-600" id="modal-description">商品描述</p>
      </div>
      
      <div class="px-6 pt-6" id="modal-options">
        <h3 class="text-lg font-bold text-gray-900">選擇規格</h3>
        <div class="mt-3 flex flex-wrap gap-3" id="modal-size-options">
          <label class="relative flex cursor-pointer items-center justify-center rounded-full border border-gray-200 px-4 py-2 text-sm font-medium text-gray-900 ring-offset-2 transition-all has-[:checked]:border-green-600 has-[:checked]:ring-2 has-[:checked]:ring-green-600">
            小份
            <input checked class="absolute h-0 w-0 appearance-none" name="modal-size" type="radio" value="small"/>
          </label>
          <label class="relative flex cursor-pointer items-center justify-center rounded-full border border-gray-200 px-4 py-2 text-sm font-medium text-gray-900 ring-offset-2 transition-all has-[:checked]:border-green-600 has-[:checked]:ring-2 has-[:checked]:ring-green-600">
            中份
            <input class="absolute h-0 w-0 appearance-none" name="modal-size" type="radio" value="medium"/>
          </label>
          <label class="relative flex cursor-pointer items-center justify-center rounded-full border border-gray-200 px-4 py-2 text-sm font-medium text-gray-900 ring-offset-2 transition-all has-[:checked]:border-green-600 has-[:checked]:ring-2 has-[:checked]:ring-green-600">
            大份
            <input class="absolute h-0 w-0 appearance-none" name="modal-size" type="radio" value="large"/>
          </label>
        </div>
      </div>
      
      <div class="px-6 py-6">
        <label class="text-lg font-bold text-gray-900" for="modal-notes">備註</label>
        <textarea class="mt-3 w-full resize-none rounded-xl border border-gray-200 bg-white p-4 text-base text-gray-900 placeholder:text-gray-400 focus:border-green-600 focus:ring-green-600" id="modal-notes" placeholder="新增備註（例如：不要洋蔥）" rows="3"></textarea>
      </div>
      
      <!-- 底部間距，確保內容不會被按鈕遮擋 -->
      <div class="h-20"></div>
    </div>
    
    <!-- 固定底部按鈕區域 -->
    <div class="absolute bottom-0 left-0 right-0 border-t border-gray-200 bg-white p-4">
      <div class="flex items-center justify-between gap-4">
        <div class="flex items-center gap-2 rounded-full bg-gray-100 p-1">
          <button class="flex h-10 w-10 items-center justify-center rounded-full text-2xl font-medium text-gray-600 transition-colors hover:bg-gray-200" onclick="changeQuantity(-1)">-</button>
          <span class="w-8 text-center text-lg font-bold" id="modal-quantity">1</span>
          <button class="flex h-10 w-10 items-center justify-center rounded-full text-2xl font-medium text-gray-600 transition-colors hover:bg-gray-200" onclick="changeQuantity(1)">+</button>
        </div>
        <button class="flex h-12 flex-1 items-center justify-center rounded-full bg-green-500 text-base font-bold text-white transition-colors hover:bg-green-600" onclick="addToCartFromModal()">
          <span class="truncate" id="modal-add-btn">加入購物車</span>
        </button>
      </div>
    </div>
  </div>
</div>

<!-- 購物車彈窗 -->
<div class="fixed inset-0 bg-black/30 z-40 hidden" id="cart-modal">
  <div class="fixed bottom-0 left-0 right-0 z-50 flex flex-col justify-end">
    <div class="bg-white rounded-t-2xl shadow-lg max-h-[80vh] flex flex-col">
      <!-- 拖拉指示器 -->
      <div class="flex justify-center pt-3">
        <div class="h-1.5 w-10 rounded-full bg-gray-200"></div>
      </div>
      
      <!-- 標題欄 -->
      <div class="flex items-center p-4 pb-2 justify-between border-b border-gray-100">
        <h2 class="text-gray-900 text-xl font-bold flex-1 text-center">購物車</h2>
        <button class="text-gray-500 hover:text-gray-800" onclick="closeCartModal()">
          <span class="material-symbols-outlined text-3xl">close</span>
        </button>
      </div>
      
      <!-- 購物車內容 - 可滾動 -->
      <div class="flex-1 overflow-y-auto">
        <div class="px-4 divide-y divide-gray-100" id="cart-modal-items">
          <!-- 動態生成購物車項目 -->
        </div>
      </div>
      
      <!-- 底部結帳區域 -->
      <div class="bg-white p-4 pt-4 mt-2 border-t border-gray-100">
        <div class="flex justify-between items-center mb-4">
          <div>
            <p class="text-gray-600 text-lg">小計</p>
            <p class="text-xs text-gray-500" id="cart-modal-delivery">滿 $200 免運費</p>
          </div>
          <div class="text-right">
            <p class="text-gray-900 text-2xl font-bold" id="cart-modal-total">$0</p>
            <p class="text-xs text-gray-500" id="cart-modal-delivery-fee">運費: $50</p>
          </div>
        </div>
        <button onclick="proceedToCheckout()" 
                class="flex w-full items-center justify-center rounded-xl h-14 px-5 bg-green-500 text-white text-lg font-bold hover:bg-green-600 transition-colors">
          <span>前往結帳</span>
        </button>
      </div>
    </div>
  </div>
</div>

<!-- 結帳彈窗 -->
<div class="fixed inset-0 bg-black/30 z-40 hidden" id="checkout-modal">
  <div class="fixed inset-4 z-50 flex items-center justify-center">
    <div class="bg-white rounded-2xl shadow-lg w-full max-w-md max-h-[90vh] flex flex-col">
      <!-- 標題欄 -->
      <div class="flex items-center p-4 border-b border-gray-100">
        <button class="text-gray-500 hover:text-gray-800 mr-3" onclick="closeCheckoutModal()">
          <span class="material-symbols-outlined">arrow_back</span>
        </button>
        <h2 class="text-gray-900 text-xl font-bold flex-1 text-center pr-8">結帳</h2>
      </div>
      
      <!-- 結帳內容 - 可滾動 -->
      <div class="flex-1 overflow-y-auto">
        <form class="p-4 space-y-6" id="checkout-form">
          <!-- 顧客資訊 -->
          <div>
            <h3 class="text-gray-800 text-lg font-bold mb-4">顾客資訊</h3>
            <div class="space-y-4">
              <div>
                <label class="block text-gray-700 text-sm font-medium mb-2">姓名 <span class="text-red-500">*</span></label>
                <input type="text" name="name" id="checkout-name" required
                       class="w-full rounded-lg border-gray-300 p-3 text-sm focus:ring-green-500 focus:border-green-500"
                       placeholder="請輸入您的姓名">
              </div>
              
              <div>
                <label class="block text-gray-700 text-sm font-medium mb-2">聯絡電話 <span class="text-red-500">*</span></label>
                <input type="tel" name="phone" id="checkout-phone" required
                       class="w-full rounded-lg border-gray-300 p-3 text-sm focus:ring-green-500 focus:border-green-500"
                       placeholder="09XXXXXXXX">
              </div>
              
              <div class="grid grid-cols-2 gap-3">
                <div>
                  <label class="block text-gray-700 text-sm font-medium mb-2">縣市 <span class="text-red-500">*</span></label>
                  <select name="city" id="checkout-city" required onchange="loadDistricts()"
                          class="w-full rounded-lg border-gray-300 p-3 text-sm focus:ring-green-500 focus:border-green-500">
                    <option value="">請選擇縣市</option>
                  </select>
                </div>
                <div>
                  <label class="block text-gray-700 text-sm font-medium mb-2">區域 <span class="text-red-500">*</span></label>
                  <select name="district" id="checkout-district" required
                          class="w-full rounded-lg border-gray-300 p-3 text-sm focus:ring-green-500 focus:border-green-500">
                    <option value="">請先選擇縣市</option>
                  </select>
                </div>
              </div>
              
              <div>
                <label class="block text-gray-700 text-sm font-medium mb-2">社區名稱</label>
                <input type="text" name="community" id="checkout-community"
                       class="w-full rounded-lg border-gray-300 p-3 text-sm focus:ring-green-500 focus:border-green-500"
                       placeholder="如：信義花園社區（選填）">
              </div>
              
              <div>
                <label class="block text-gray-700 text-sm font-medium mb-2">詳細地址 <span class="text-red-500">*</span></label>
                <input type="text" name="address" id="checkout-address" required
                       class="w-full rounded-lg border-gray-300 p-3 text-sm focus:ring-green-500 focus:border-green-500"
                       placeholder="巷弄、門牌號碼">
              </div>
            </div>
          </div>

          <!-- 付款方式 -->
          <div>
            <h3 class="text-gray-800 text-lg font-bold mb-4">付款方式</h3>
            <div class="space-y-3">
              <label class="flex items-center cursor-pointer">
                <input type="radio" name="paymentMethod" value="cash" checked class="w-4 h-4 text-green-600 border-gray-300 focus:ring-green-500">
                <span class="ml-3 text-gray-700">💰 現金（貨到付款）</span>
              </label>
              <label class="flex items-center cursor-pointer">
                <input type="radio" name="paymentMethod" value="bank_transfer" class="w-4 h-4 text-green-600 border-gray-300 focus:ring-green-500">
                <span class="ml-3 text-gray-700">🏦 銀行轉帳</span>
              </label>
              <label class="flex items-center cursor-pointer">
                <input type="radio" name="paymentMethod" value="line_pay" class="w-4 h-4 text-green-600 border-gray-300 focus:ring-green-500">
                <span class="ml-3 text-gray-700">💳 LINE Pay</span>
              </label>
            </div>
          </div>

          <!-- 訂購項目 -->
          <div>
            <div class="flex items-center justify-between mb-4 cursor-pointer" onclick="toggleCheckoutItems()">
              <h3 class="text-gray-800 text-lg font-bold">訂購項目</h3>
              <span class="material-symbols-outlined text-gray-500" id="checkout-toggle-icon">expand_more</span>
            </div>
            
            <div class="bg-gray-50 rounded-lg p-3 hidden" id="checkout-items-detail">
              <!-- 動態生成訂單項目 -->
            </div>
            
            <div class="mt-3 text-sm text-gray-600">
              <span id="checkout-items-summary">載入中...</span>
            </div>
          </div>

          <!-- 備註 -->
          <div>
            <label class="block text-gray-700 text-sm font-medium mb-2">備註</label>
            <textarea name="notes" id="checkout-notes" rows="3"
                      class="w-full rounded-lg border-gray-300 p-3 text-sm focus:ring-green-500 focus:border-green-500"
                      placeholder="特殊需求或配送指示"></textarea>
          </div>
        </form>
      </div>
      
      <!-- 底部結帳區域 -->
      <div class="bg-white p-4 border-t border-gray-100">
        <div class="flex justify-between items-center mb-4">
          <div>
            <p class="text-gray-600 font-medium">訂單金額</p>
            <p class="text-xs text-gray-500" id="checkout-delivery-info">滿 $200 免運費</p>
          </div>
          <div class="text-right">
            <p class="text-gray-900 text-xl font-bold" id="checkout-total-amount">$0</p>
            <p class="text-xs text-gray-500" id="checkout-delivery-fee-info">運費: $50</p>
          </div>
        </div>
        <div class="grid grid-cols-2 gap-3">
          <button type="button" onclick="closeCheckoutModal()" 
                  class="w-full py-3 px-4 bg-gray-200 text-gray-700 rounded-lg font-medium hover:bg-gray-300 transition-colors">
            取消
          </button>
          <button type="button" onclick="submitCheckoutOrder()" id="checkout-submit-btn"
                  class="w-full py-3 px-4 bg-green-600 text-white rounded-lg font-medium hover:bg-green-700 transition-colors">
            送出訂單
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- 訂單查詢彈窗 -->
<div class="fixed inset-0 bg-black/30 z-40 hidden" id="order-tracking-modal">
  <div class="fixed inset-4 z-50 flex items-center justify-center">
    <div class="bg-white rounded-2xl shadow-lg w-full max-w-md max-h-[90vh] flex flex-col">
      <!-- 標題欄 -->
      <div class="flex items-center p-4 border-b border-gray-100">
        <button class="text-gray-500 hover:text-gray-800 mr-3" onclick="closeOrderTrackingModal()">
          <span class="material-symbols-outlined">close</span>
        </button>
        <h2 class="text-gray-900 text-xl font-bold flex-1 text-center pr-8">訂單查詢</h2>
      </div>
      
      <!-- 彈窗內容 - 可滾動 -->
      <div class="flex-1 overflow-y-auto" id="order-tracking-content">
        <!-- 搜尋頁面 -->
        <div class="p-6" id="order-search-page">
          <div class="text-center mb-6">
            <div class="text-5xl mb-4">📋</div>
            <h3 class="text-lg font-bold text-gray-900 mb-2">查詢訂單</h3>
            <p class="text-gray-600 text-sm">請輸入您的手機號碼查詢訂單</p>
          </div>
          
          <div class="space-y-4">
            <div>
              <label class="block text-gray-700 text-sm font-medium mb-2">手機號碼</label>
              <input type="tel" id="order-search-phone" 
                     class="w-full rounded-lg border-gray-300 p-3 text-lg focus:ring-green-500 focus:border-green-500"
                     placeholder="09XXXXXXXX"
                     maxlength="10">
            </div>
            
            <button onclick="searchOrders()" id="search-orders-btn"
                    class="w-full py-3 px-4 bg-green-600 text-white rounded-lg font-medium hover:bg-green-700 transition-colors">
              查詢訂單
            </button>
          </div>
          
          <div class="mt-6 text-center">
            <p class="text-xs text-gray-500">僅顯示最近10筆訂單記錄</p>
          </div>
        </div>
        
        <!-- 訂單列表頁面 -->
        <div class="hidden" id="order-list-page">
          <div class="p-4 border-b border-gray-100">
            <button onclick="backToSearch()" class="flex items-center text-gray-600 hover:text-gray-800 mb-2">
              <span class="material-symbols-outlined mr-1">arrow_back</span>
              <span class="text-sm">重新搜尋</span>
            </button>
            <h3 class="text-lg font-bold text-gray-900" id="order-list-title">找到的訂單</h3>
            <p class="text-sm text-gray-600" id="order-list-subtitle">點擊查看詳細資訊</p>
          </div>
          
          <div class="divide-y divide-gray-100" id="order-list-container">
            <!-- 動態生成訂單列表 -->
          </div>
        </div>
        
        <!-- 訂單詳情頁面 -->
        <div class="hidden" id="order-detail-page">
          <div class="p-4 border-b border-gray-100">
            <button onclick="backToList()" class="flex items-center text-gray-600 hover:text-gray-800 mb-2">
              <span class="material-symbols-outlined mr-1">arrow_back</span>
              <span class="text-sm">返回列表</span>
            </button>
            <h3 class="text-lg font-bold text-gray-900" id="order-detail-title">訂單詳情</h3>
          </div>
          
          <div class="p-4 space-y-6" id="order-detail-container">
            <!-- 動態生成訂單詳情 -->
          </div>
        </div>
        
        <!-- 載入中狀態 -->
        <div class="hidden p-8 text-center" id="order-loading">
          <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-green-600"></div>
          <p class="text-gray-600 mt-4">載入中...</p>
        </div>
        
        <!-- 錯誤狀態 -->
        <div class="hidden p-6 text-center" id="order-error">
          <div class="text-5xl mb-4">❌</div>
          <h3 class="text-lg font-bold text-gray-900 mb-2">發生錯誤</h3>
          <p class="text-gray-600 mb-4" id="order-error-message">載入訂單時發生錯誤</p>
          <button onclick="backToSearch()" class="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700">
            重新開始
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
// 購物車功能
let cart = JSON.parse(localStorage.getItem('cart')) || [];
let currentProduct = null;
let modalQuantity = 1;

// 更新購物車顯示
function updateCartDisplay() {
  const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
  const totalPrice = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
  
  document.getElementById('cart-total').textContent = `$${totalPrice}`;
  document.getElementById('checkout-text').textContent = `來去結帳 (${totalItems})`;
  
  localStorage.setItem('cart', JSON.stringify(cart));
}

// 加入購物車
function addToCart(productId, name, price, isPricedItem) {
  if (isPricedItem === 'true') {
    alert('時價商品請聯繫客服詢價');
    return;
  }
  
  const existingItem = cart.find(item => item.productId === productId);
  if (existingItem) {
    existingItem.quantity += 1;
  } else {
    cart.push({
      productId: productId,
      name: name,
      price: parseInt(price),
      quantity: 1
    });
  }
  
  updateCartDisplay();
  
  // 顯示加入成功提示
  const button = event.target.closest('button');
  const originalContent = button.innerHTML;
  button.innerHTML = '<span class="material-symbols-outlined">check</span>';
  button.classList.add('bg-green-600');
  
  setTimeout(() => {
    button.innerHTML = originalContent;
    button.classList.remove('bg-green-600');
  }, 800);
}

// 打開商品詳情彈窗
function openProductModal(productId, name, price, unitHint, isPricedItem) {
  currentProduct = { productId, name, price, unitHint, isPricedItem };
  modalQuantity = 1;
  
  document.getElementById('modal-title').textContent = name;
  document.getElementById('modal-description').textContent = `新鮮優質的${name}，產地直送，品質保證。`;
  document.getElementById('modal-quantity').textContent = modalQuantity;
  document.getElementById('modal-image').style.backgroundImage = `url('https://images.unsplash.com/photo-1542838132-92c53300491e?w=400&h=400&fit=crop&crop=center')`;
  
  const addBtn = document.getElementById('modal-add-btn');
  if (isPricedItem === 'true') {
    addBtn.textContent = '聯繫客服詢價';
  } else {
    addBtn.textContent = `加入購物車 - $${price * modalQuantity}`;
  }
  
  document.getElementById('product-modal').classList.remove('hidden');
  document.body.style.overflow = 'hidden';
}

// 關閉商品詳情彈窗
function closeProductModal() {
  document.getElementById('product-modal').classList.add('hidden');
  document.body.style.overflow = 'auto';
  document.getElementById('modal-notes').value = '';
}

// 改變數量
function changeQuantity(change) {
  modalQuantity = Math.max(1, modalQuantity + change);
  document.getElementById('modal-quantity').textContent = modalQuantity;
  
  if (currentProduct && currentProduct.isPricedItem !== 'true') {
    document.getElementById('modal-add-btn').textContent = `加入購物車 - $${currentProduct.price * modalQuantity}`;
  }
}

// 從彈窗加入購物車
function addToCartFromModal() {
  if (!currentProduct) return;
  
  if (currentProduct.isPricedItem === 'true') {
    alert('時價商品請聯繫客服詢價');
    return;
  }
  
  const existingItem = cart.find(item => item.productId === currentProduct.productId);
  if (existingItem) {
    existingItem.quantity += modalQuantity;
  } else {
    cart.push({
      productId: currentProduct.productId,
      name: currentProduct.name,
      price: parseInt(currentProduct.price),
      quantity: modalQuantity
    });
  }
  
  updateCartDisplay();
  closeProductModal();
  
  // 顯示成功提示
  const notification = document.createElement('div');
  notification.className = 'fixed top-20 left-1/2 transform -translate-x-1/2 bg-green-500 text-white px-4 py-2 rounded-lg z-50';
  notification.textContent = `${currentProduct.name} 已加入購物車`;
  document.body.appendChild(notification);
  
  setTimeout(() => {
    notification.remove();
  }, 2000);
}

// 購物車彈窗功能
function openCartModal() {
  if (cart.length === 0) {
    // 顯示空購物車彈窗
    renderEmptyCartModal();
    document.getElementById('cart-modal').classList.remove('hidden');
    document.body.style.overflow = 'hidden';
    return;
  }
  
  renderCartModal();
  updateCartModalTotal();
  document.getElementById('cart-modal').classList.remove('hidden');
  document.body.style.overflow = 'hidden';
}

function closeCartModal() {
  document.getElementById('cart-modal').classList.add('hidden');
  document.body.style.overflow = 'auto';
}

function renderCartModal() {
  const container = document.getElementById('cart-modal-items');
  
  if (cart.length === 0) {
    renderEmptyCartModal();
    return;
  }
  
  container.innerHTML = cart.map(item => `
    <div class="flex items-center gap-4 py-4">
      <img alt="${item.name}" class="rounded-lg size-16 object-cover" 
           src="https://images.unsplash.com/photo-1542838132-92c53300491e?w=100&h=100&fit=crop&crop=center">
      <div class="flex-1">
        <p class="text-gray-800 text-base font-medium">${item.name}</p>
        <p class="text-gray-500 text-sm">單價: $${item.price}</p>
        <p class="text-green-600 text-base font-bold mt-1">$${item.price * item.quantity}</p>
      </div>
      <div class="flex items-center gap-2">
        <button onclick="changeCartQuantity('${item.productId}', -1)" 
                class="flex h-8 w-8 items-center justify-center rounded-full bg-gray-100 text-gray-600 hover:bg-gray-200 transition-colors text-lg">-</button>
        <span class="text-base font-medium w-6 text-center">${item.quantity}</span>
        <button onclick="changeCartQuantity('${item.productId}', 1)" 
                class="flex h-8 w-8 items-center justify-center rounded-full bg-gray-100 text-gray-600 hover:bg-gray-200 transition-colors text-lg">+</button>
      </div>
    </div>
  `).join('');
  
  // 顯示結帳按鈕區域
  document.querySelector('#cart-modal .bg-white.p-4.pt-4.mt-2').style.display = 'block';
}

function updateCartModalTotal() {
  const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
  const deliveryFee = subtotal >= 200 ? 0 : 50;
  const total = subtotal + deliveryFee;
  
  document.getElementById('cart-modal-total').textContent = `$${total}`;
  document.getElementById('cart-modal-delivery-fee').textContent = deliveryFee > 0 ? `運費: $${deliveryFee}` : '免運費';
  document.getElementById('cart-modal-delivery').textContent = subtotal >= 200 ? '已達免運門檻' : '滿 $200 免運費';
}

function changeCartQuantity(productId, change) {
  const item = cart.find(item => item.productId === productId);
  if (!item) return;
  
  // 如果是減少數量且目前數量是1，顯示確認對話框
  if (change < 0 && item.quantity === 1) {
    if (confirm(`確定要移除「${item.name}」嗎？`)) {
      cart = cart.filter(cartItem => cartItem.productId !== productId);
    } else {
      return; // 取消移除
    }
  } else {
    item.quantity += change;
    if (item.quantity <= 0) {
      cart = cart.filter(cartItem => cartItem.productId !== productId);
    }
  }
  
  // 更新所有顯示
  updateCartDisplay();
  
  // 如果購物車空了，顯示空購物車
  if (cart.length === 0) {
    renderEmptyCartModal();
  } else {
    renderCartModal();
    updateCartModalTotal();
  }
}

function renderEmptyCartModal() {
  const container = document.getElementById('cart-modal-items');
  container.innerHTML = `
    <div class="p-8 text-center">
      <div class="text-6xl mb-4">🛒</div>
      <p class="text-gray-500 text-lg mb-2">購物車內尚無商品</p>
      <p class="text-gray-400 text-sm">快去挑選喜歡的新鮮蔬果吧！</p>
    </div>
  `;
  
  // 隱藏結帳按鈕區域
  document.querySelector('#cart-modal .bg-white.p-4.pt-4.mt-2').style.display = 'none';
}

function proceedToCheckout() {
  if (cart.length === 0) {
    alert('購物車內尚無商品');
    return;
  }
  
  // 關閉購物車彈窗，開啟結帳彈窗
  closeCartModal();
  openCheckoutModal();
}

// 初始化
updateCartDisplay();

// 點擊彈窗背景關閉
document.getElementById('product-modal').addEventListener('click', function(e) {
  if (e.target === this) {
    closeProductModal();
  }
});

// 結帳彈窗功能
function openCheckoutModal() {
  renderCheckoutItems();
  updateCheckoutTotal();
  loadDeliveryAreas();
  document.getElementById('checkout-modal').classList.remove('hidden');
  document.body.style.overflow = 'hidden';
}

function closeCheckoutModal() {
  document.getElementById('checkout-modal').classList.add('hidden');
  document.body.style.overflow = 'auto';
}

// 全域變數存儲配送區域資料
let deliveryAreas = {};

// 載入配送區域資料
async function loadDeliveryAreas() {
  try {
    const response = await fetch('/api/delivery-areas');
    const data = await response.json();
    
    if (data.success) {
      deliveryAreas = {};
      
      // 整理資料結構：城市為key，區域陣列為value
      data.areas.forEach(area => {
        if (!deliveryAreas[area.city]) {
          deliveryAreas[area.city] = [];
        }
        deliveryAreas[area.city].push(area.district);
      });
      
      // 更新縣市選項
      updateCityOptions();
    }
  } catch (error) {
    console.error('載入配送區域失敗:', error);
    // 失敗時使用預設區域
    deliveryAreas = {
      '台北市': ['中正區', '大同區', '中山區', '松山區', '大安區', '萬華區', '信義區', '士林區', '北投區', '內湖區', '南港區', '文山區']
    };
    updateCityOptions();
  }
}

// 更新縣市選項
function updateCityOptions() {
  const citySelect = document.getElementById('checkout-city');
  citySelect.innerHTML = '<option value="">請選擇縣市</option>';
  
  Object.keys(deliveryAreas).forEach(city => {
    const option = document.createElement('option');
    option.value = city;
    option.textContent = city;
    citySelect.appendChild(option);
  });
}

// 載入區域選項
function loadDistricts() {
  const citySelect = document.getElementById('checkout-city');
  const districtSelect = document.getElementById('checkout-district');
  const selectedCity = citySelect.value;
  
  // 清空區域選項
  districtSelect.innerHTML = '<option value="">請選擇區域</option>';
  
  if (selectedCity && deliveryAreas[selectedCity]) {
    deliveryAreas[selectedCity].forEach(district => {
      const option = document.createElement('option');
      option.value = district;
      option.textContent = district;
      districtSelect.appendChild(option);
    });
  } else if (!selectedCity) {
    districtSelect.innerHTML = '<option value="">請先選擇縣市</option>';
  }
}

function renderCheckoutItems() {
  const container = document.getElementById('checkout-items-detail');
  const summary = document.getElementById('checkout-items-summary');
  
  const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
  summary.textContent = `${totalItems} 項商品`;
  
  container.innerHTML = cart.map(item => `
    <div class="flex items-center justify-between py-2 border-b border-gray-200 last:border-b-0">
      <div class="flex-1">
        <p class="text-gray-800 font-medium text-sm">${item.name}</p>
        <p class="text-gray-500 text-xs">單價: $${item.price}</p>
      </div>
      <div class="flex items-center gap-2">
        <button onclick="changeCheckoutQuantity('${item.productId}', -1)" 
                class="flex h-6 w-6 items-center justify-center rounded-full bg-gray-200 text-gray-600 hover:bg-gray-300 transition-colors text-sm">-</button>
        <span class="text-sm font-medium w-6 text-center">${item.quantity}</span>
        <button onclick="changeCheckoutQuantity('${item.productId}', 1)" 
                class="flex h-6 w-6 items-center justify-center rounded-full bg-gray-200 text-gray-600 hover:bg-gray-300 transition-colors text-sm">+</button>
        <span class="text-green-600 font-bold text-sm ml-2">$${item.price * item.quantity}</span>
      </div>
    </div>
  `).join('');
}

function updateCheckoutTotal() {
  const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
  const deliveryFee = subtotal >= 200 ? 0 : 50;
  const total = subtotal + deliveryFee;
  
  document.getElementById('checkout-total-amount').textContent = `$${total}`;
  document.getElementById('checkout-delivery-fee-info').textContent = deliveryFee > 0 ? `運費: $${deliveryFee}` : '免運費';
  document.getElementById('checkout-delivery-info').textContent = subtotal >= 200 ? '已達免運門檻' : '滿 $200 免運費';
}

function changeCheckoutQuantity(productId, change) {
  const item = cart.find(item => item.productId === productId);
  if (!item) return;
  
  // 如果是減少數量且目前數量是1，顯示確認對話框
  if (change < 0 && item.quantity === 1) {
    if (confirm(`確定要移除「${item.name}」嗎？`)) {
      cart = cart.filter(cartItem => cartItem.productId !== productId);
    } else {
      return; // 取消移除
    }
  } else {
    item.quantity += change;
    if (item.quantity <= 0) {
      cart = cart.filter(cartItem => cartItem.productId !== productId);
    }
  }
  
  // 更新所有顯示
  updateCartDisplay();
  
  // 如果購物車空了，關閉結帳彈窗
  if (cart.length === 0) {
    closeCheckoutModal();
    alert('購物車已清空');
    return;
  }
  
  renderCheckoutItems();
  updateCheckoutTotal();
}

function toggleCheckoutItems() {
  const detail = document.getElementById('checkout-items-detail');
  const icon = document.getElementById('checkout-toggle-icon');
  
  if (detail.classList.contains('hidden')) {
    detail.classList.remove('hidden');
    icon.textContent = 'expand_less';
  } else {
    detail.classList.add('hidden');
    icon.textContent = 'expand_more';
  }
}

async function submitCheckoutOrder() {
  // 驗證必填欄位
  const name = document.getElementById('checkout-name').value.trim();
  const phone = document.getElementById('checkout-phone').value.trim();
  const city = document.getElementById('checkout-city').value;
  const district = document.getElementById('checkout-district').value;
  const address = document.getElementById('checkout-address').value.trim();
  const community = document.getElementById('checkout-community').value.trim();
  
  if (!name || !phone || !city || !district || !address) {
    alert('請填寫所有必填欄位');
    return;
  }
  
  // 手機號碼格式驗證
  const phoneRegex = /^09\d{8}$/;
  if (!phoneRegex.test(phone)) {
    alert('請輸入正確的手機號碼格式 (09XXXXXXXX)');
    return;
  }
  
  // 準備訂單資料
  const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
  const notes = document.getElementById('checkout-notes').value.trim();
  let fullAddress = `${city}${district}${address}`;
  if (community) {
    fullAddress = `${city}${district}${community}${address}`;
  }
  
  const orderData = {
    name: name,
    phone: phone,
    address: fullAddress,
    notes: notes,
    paymentMethod: paymentMethod,
    items: cart.map(item => ({
      productId: item.productId,
      quantity: item.quantity
    }))
  };
  
  // 顯示載入狀態
  const submitBtn = document.getElementById('checkout-submit-btn');
  const originalText = submitBtn.innerHTML;
  submitBtn.innerHTML = '送出中...';
  submitBtn.disabled = true;
  
  try {
    const response = await fetch('/api/orders', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(orderData)
    });
    
    const result = await response.json();
    
    if (result.success) {
      // 清空購物車
      localStorage.removeItem('cart');
      cart = [];
      updateCartDisplay();
      
      // 關閉彈窗
      closeCheckoutModal();
      
      // 顯示成功訊息並跳轉到訂單確認頁面
      alert(`✅ 訂單建立成功！\n訂單編號：#${result.orderId}\n即將跳轉到訂單確認頁面...`);
      
      // 跳轉到訂單確認頁面
      setTimeout(() => {
        window.location.href = `/order-success?id=${result.orderId}`;
      }, 1500);
    } else {
      // 顯示詳細錯誤資訊
      let errorMessage = `下單失敗: ${result.message}`;
      if (result.errors && Array.isArray(result.errors)) {
        errorMessage += '\n\n詳細錯誤：\n' + result.errors.join('\n');
      }
      alert(errorMessage);
    }
  } catch (error) {
    console.error('下單錯誤:', error);
    alert('下單失敗，請稍後再試');
  } finally {
    // 恢復按鈕狀態
    submitBtn.innerHTML = originalText;
    submitBtn.disabled = false;
  }
}

// 購物車彈窗背景點擊關閉
document.getElementById('cart-modal').addEventListener('click', function(e) {
  if (e.target === this) {
    closeCartModal();
  }
});

// 結帳彈窗背景點擊關閉
document.getElementById('checkout-modal').addEventListener('click', function(e) {
  if (e.target === this) {
    closeCheckoutModal();
  }
});

// 📢 訂單時間提醒系統
function initOrderTimeSystem() {
  const now = new Date();
  const hour = now.getHours();
  const minutes = now.getMinutes();
  const day = now.getDay(); // 0=週日, 1=週一, ..., 6=週六
  
  let status, message, color, icon, description;
  
  // 檢查是否為休假日 (假設週日休息)
  if (day === 0) {
    status = 'holiday';
    message = '💤 今日為休假日';
    color = '#9ca3af'; // gray-400
    icon = '💤';
    description = '今天是休假日，暫不提供服務。明天14:00開放訂購。';
  }
  // 00:00-11:00 今日配送接單中
  else if (hour < 11) {
    status = 'accepting';
    message = `🚚 今日配送訂單，${11 - hour}小時${60 - minutes}分鐘後截止`;
    color = '#22c55e'; // green-500  
    icon = '🚚';
    description = '現在可以下訂今天配送的商品，11:00前截止下單。';
  }
  // 11:01-13:59 今日截止，等待明日開放
  else if (hour < 14) {
    status = 'waiting';
    message = `⏰ 今日訂單已截止，${14 - hour}小時${60 - minutes}分鐘後開放明日預訂`;
    color = '#f59e0b'; // amber-500
    icon = '⏰';
    description = '今天的配送訂單已經截止，14:00開放明天的預訂。';
  }
  // 14:00-23:59 明日配送預訂中
  else {
    status = 'booking';
    message = '📅 明日配送訂單，開放預訂中';
    color = '#3b82f6'; // blue-500
    icon = '📅';
    description = '現在可以預訂明天配送的商品。';
  }
  
  // 更新橫幅
  const banner = document.getElementById('order-time-banner');
  const messageEl = document.getElementById('order-time-message');
  
  banner.style.backgroundColor = color;
  banner.style.color = 'white';
  messageEl.textContent = message;
  
  // 更新彈窗內容
  document.getElementById('popup-time-icon').textContent = icon;
  document.getElementById('popup-time-title').textContent = '訂單時間提醒';
  document.getElementById('popup-time-desc').textContent = description;
  
  // 首次訪問顯示彈窗
  if (!localStorage.getItem('orderTimePopupShown_' + new Date().toDateString())) {
    setTimeout(() => {
      showOrderTimePopup();
    }, 1000);
  }
}

function showOrderTimePopup() {
  document.getElementById('order-time-popup').classList.remove('hidden');
  document.getElementById('order-time-popup').classList.add('flex');
  document.body.style.overflow = 'hidden';
}

function closeOrderTimePopup() {
  document.getElementById('order-time-popup').classList.add('hidden');
  document.getElementById('order-time-popup').classList.remove('flex');
  document.body.style.overflow = 'auto';
  
  // 標記今日已顯示過彈窗
  localStorage.setItem('orderTimePopupShown_' + new Date().toDateString(), 'true');
}

// 頁面載入完成後初始化
document.addEventListener('DOMContentLoaded', function() {
  initOrderTimeSystem();
  
  // 每分鐘更新一次狀態
  setInterval(initOrderTimeSystem, 60000);
});

// 📋 訂單查詢彈窗功能
let currentOrderPhone = '';
let currentOrders = [];

// 開啟訂單查詢彈窗
function openOrderTrackingModal() {
  document.getElementById('order-tracking-modal').classList.remove('hidden');
  document.body.style.overflow = 'hidden';
  
  // 重置狀態
  showPage('order-search-page');
  document.getElementById('order-search-phone').value = '';
  document.getElementById('order-search-phone').focus();
}

// 關閉訂單查詢彈窗
function closeOrderTrackingModal() {
  document.getElementById('order-tracking-modal').classList.add('hidden');
  document.body.style.overflow = 'auto';
}

// 顯示指定頁面
function showPage(pageId) {
  const pages = ['order-search-page', 'order-list-page', 'order-detail-page', 'order-loading', 'order-error'];
  pages.forEach(id => {
    document.getElementById(id).classList.add('hidden');
  });
  document.getElementById(pageId).classList.remove('hidden');
}

// 搜尋訂單
async function searchOrders() {
  const phone = document.getElementById('order-search-phone').value.trim();
  
  // 驗證手機號碼格式
  const phoneRegex = /^09\d{8}$/;
  if (!phoneRegex.test(phone)) {
    alert('請輸入正確的手機號碼格式 (09XXXXXXXX)');
    return;
  }
  
  currentOrderPhone = phone;
  
  // 顯示載入狀態
  showPage('order-loading');
  
  try {
    const response = await fetch(`/api/orders/search/${phone}`);
    const data = await response.json();
    
    if (data.success) {
      currentOrders = data.orders;
      
      if (data.orders.length === 0) {
        showNoOrdersMessage();
      } else if (data.orders.length === 1) {
        // 只有一筆訂單，直接顯示詳情
        loadOrderDetails(data.orders[0].id);
      } else {
        // 多筆訂單，顯示列表
        showOrderList(data.orders);
      }
    } else {
      showError(data.message || '查詢訂單時發生錯誤');
    }
  } catch (error) {
    console.error('搜尋訂單錯誤:', error);
    showError('網路連線錯誤，請稍後再試');
  }
}

// 顯示無訂單訊息
function showNoOrdersMessage() {
  const container = document.getElementById('order-list-container');
  container.innerHTML = `
    <div class="p-8 text-center">
      <div class="text-5xl mb-4">📭</div>
      <h3 class="text-lg font-bold text-gray-900 mb-2">沒有找到訂單</h3>
      <p class="text-gray-600 mb-4">此手機號碼沒有相關的訂單記錄</p>
      <button onclick="backToSearch()" class="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700">
        重新搜尋
      </button>
    </div>
  `;
  
  document.getElementById('order-list-title').textContent = '查無訂單';
  document.getElementById('order-list-subtitle').textContent = '';
  showPage('order-list-page');
}

// 顯示訂單列表
function showOrderList(orders) {
  const container = document.getElementById('order-list-container');
  
  container.innerHTML = orders.map(order => {
    const date = new Date(order.created_at).toLocaleDateString('zh-TW');
    const time = new Date(order.created_at).toLocaleTimeString('zh-TW', { 
      hour: '2-digit', 
      minute: '2-digit' 
    });
    
    return `
      <div class="p-4 hover:bg-gray-50 cursor-pointer transition-colors" 
           onclick="loadOrderDetails(${order.id})">
        <div class="flex justify-between items-start mb-2">
          <div>
            <h4 class="font-semibold text-gray-900">#${order.id}</h4>
            <p class="text-sm text-gray-600">${date} ${time}</p>
          </div>
          <div class="text-right">
            <div class="text-lg font-bold text-green-600">$${order.total_amount}</div>
            <div class="text-xs ${getStatusColor(order.status)}">${getStatusText(order.status)}</div>
          </div>
        </div>
        <p class="text-sm text-gray-600 mb-2">${order.address}</p>
        ${order.notes ? `<p class="text-xs text-gray-500">備註：${order.notes}</p>` : ''}
        <div class="flex justify-end mt-2">
          <span class="material-symbols-outlined text-gray-400 text-sm">chevron_right</span>
        </div>
      </div>
    `;
  }).join('');
  
  document.getElementById('order-list-title').textContent = `找到 ${orders.length} 筆訂單`;
  document.getElementById('order-list-subtitle').textContent = '點擊查看詳細資訊';
  showPage('order-list-page');
}

// 載入訂單詳情
async function loadOrderDetails(orderId) {
  showPage('order-loading');
  
  try {
    const response = await fetch(`/api/orders/${orderId}/details/${currentOrderPhone}`);
    const data = await response.json();
    
    if (data.success) {
      showOrderDetails(data.order);
    } else {
      showError(data.message || '載入訂單詳情時發生錯誤');
    }
  } catch (error) {
    console.error('載入訂單詳情錯誤:', error);
    showError('網路連線錯誤，請稍後再試');
  }
}

// 顯示訂單詳情
function showOrderDetails(order) {
  const container = document.getElementById('order-detail-container');
  const createDate = new Date(order.created_at).toLocaleString('zh-TW');
  
  container.innerHTML = `
    <!-- 訂單狀態 -->
    <div class="bg-gray-50 rounded-lg p-4">
      <div class="flex items-center justify-between mb-3">
        <h4 class="font-semibold text-gray-900">訂單 #${order.id}</h4>
        <span class="px-3 py-1 rounded-full text-sm font-medium ${getStatusBgColor(order.status)} ${getStatusTextColor(order.status)}">
          ${getStatusText(order.status)}
        </span>
      </div>
      
      <!-- 狀態進度條 -->
      <div class="mt-4">
        ${renderStatusProgress(order.status)}
      </div>
    </div>
    
    <!-- 基本資訊 -->
    <div>
      <h4 class="font-semibold text-gray-900 mb-3">基本資訊</h4>
      <div class="space-y-2 text-sm">
        <div class="flex justify-between">
          <span class="text-gray-600">下單時間</span>
          <span class="text-gray-900">${createDate}</span>
        </div>
        <div class="flex justify-between">
          <span class="text-gray-600">聯絡人</span>
          <span class="text-gray-900">${order.contact_name}</span>
        </div>
        <div class="flex justify-between">
          <span class="text-gray-600">聯絡電話</span>
          <span class="text-gray-900">${order.contact_phone}</span>
        </div>
        <div class="flex justify-between">
          <span class="text-gray-600">配送地址</span>
          <span class="text-gray-900 text-right max-w-48">${order.address}</span>
        </div>
        <div class="flex justify-between">
          <span class="text-gray-600">付款方式</span>
          <span class="text-gray-900">${getPaymentMethodText(order.payment_method)}</span>
        </div>
        ${order.notes ? `
        <div class="flex justify-between">
          <span class="text-gray-600">備註</span>
          <span class="text-gray-900 text-right max-w-48">${order.notes}</span>
        </div>
        ` : ''}
      </div>
    </div>
    
    <!-- 訂購項目 -->
    <div>
      <h4 class="font-semibold text-gray-900 mb-3">訂購項目</h4>
      <div class="space-y-3">
        ${order.items ? order.items.map(item => `
          <div class="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
            <div class="flex-1">
              <h5 class="font-medium text-gray-900">${item.product_name}</h5>
              <p class="text-sm text-gray-600">單價: $${item.unit_price}</p>
            </div>
            <div class="text-right">
              <div class="font-medium text-gray-900">x ${item.quantity}</div>
              <div class="text-sm font-bold text-green-600">$${item.total_price}</div>
            </div>
          </div>
        `).join('') : '<p class="text-gray-500 text-sm">暫無商品資訊</p>'}
      </div>
    </div>
    
    <!-- 費用明細 -->
    <div>
      <h4 class="font-semibold text-gray-900 mb-3">費用明細</h4>
      <div class="space-y-2 text-sm">
        <div class="flex justify-between">
          <span class="text-gray-600">商品小計</span>
          <span class="text-gray-900">$${order.subtotal || (order.total_amount - (order.delivery_fee || 0))}</span>
        </div>
        <div class="flex justify-between">
          <span class="text-gray-600">運費</span>
          <span class="text-gray-900">$${order.delivery_fee || 0}</span>
        </div>
        <div class="border-t border-gray-200 pt-2 mt-2">
          <div class="flex justify-between font-bold text-lg">
            <span class="text-gray-900">總計</span>
            <span class="text-green-600">$${order.total_amount}</span>
          </div>
        </div>
      </div>
    </div>
    
    ${order.driver ? `
    <!-- 外送員資訊 -->
    <div>
      <h4 class="font-semibold text-gray-900 mb-3">外送員資訊</h4>
      <div class="bg-blue-50 rounded-lg p-3">
        <div class="flex items-center">
          <span class="material-symbols-outlined text-blue-600 mr-2">delivery_truck</span>
          <div>
            <p class="font-medium text-gray-900">${order.driver.name}</p>
            <p class="text-sm text-gray-600">${order.driver.phone}</p>
          </div>
        </div>
      </div>
    </div>
    ` : ''}
  `;
  
  document.getElementById('order-detail-title').textContent = `訂單 #${order.id}`;
  showPage('order-detail-page');
}

// 返回搜尋頁面
function backToSearch() {
  showPage('order-search-page');
  currentOrderPhone = '';
  currentOrders = [];
}

// 返回訂單列表
function backToList() {
  if (currentOrders.length > 1) {
    showOrderList(currentOrders);
  } else {
    backToSearch();
  }
}

// 顯示錯誤訊息
function showError(message) {
  document.getElementById('order-error-message').textContent = message;
  showPage('order-error');
}

// 獲取狀態文字
function getStatusText(status) {
  const statusMap = {
    'pending': '待確認',
    'preparing': '準備中',
    'packed': '包裝完成',
    'delivering': '配送中',
    'delivered': '已完成',
    'cancelled': '已取消'
  };
  return statusMap[status] || status;
}

// 獲取狀態顏色類
function getStatusColor(status) {
  const colorMap = {
    'pending': 'text-yellow-600',
    'preparing': 'text-blue-600',
    'packed': 'text-green-600',
    'delivering': 'text-orange-600',
    'delivered': 'text-green-700',
    'cancelled': 'text-red-600'
  };
  return colorMap[status] || 'text-gray-600';
}

// 獲取狀態背景顏色
function getStatusBgColor(status) {
  const bgMap = {
    'pending': 'bg-yellow-100',
    'preparing': 'bg-blue-100',
    'packed': 'bg-green-100',
    'delivering': 'bg-orange-100',
    'delivered': 'bg-green-200',
    'cancelled': 'bg-red-100'
  };
  return bgMap[status] || 'bg-gray-100';
}

// 獲取狀態文字顏色
function getStatusTextColor(status) {
  const textColorMap = {
    'pending': 'text-yellow-800',
    'preparing': 'text-blue-800',
    'packed': 'text-green-800',
    'delivering': 'text-orange-800',
    'delivered': 'text-green-900',
    'cancelled': 'text-red-800'
  };
  return textColorMap[status] || 'text-gray-800';
}

// 獲取付款方式文字
function getPaymentMethodText(method) {
  const methodMap = {
    'cash': '現金付款',
    'bank_transfer': '銀行轉帳',
    'line_pay': 'LINE Pay',
    'credit_card': '信用卡'
  };
  return methodMap[method] || method;
}

// 渲染狀態進度條
function renderStatusProgress(currentStatus) {
  const statusFlow = [
    { key: 'pending', label: '待確認', icon: 'pending' },
    { key: 'preparing', label: '準備中', icon: 'cooking' },
    { key: 'packed', label: '包裝完成', icon: 'inventory' },
    { key: 'delivering', label: '配送中', icon: 'local_shipping' },
    { key: 'delivered', label: '已完成', icon: 'check_circle' }
  ];
  
  // 找到當前狀態的索引
  let currentIndex = statusFlow.findIndex(s => s.key === currentStatus);
  
  // 取消狀態處理
  if (currentStatus === 'cancelled') {
    return `
      <div class="flex items-center justify-center p-4 bg-red-50 rounded-lg">
        <span class="material-symbols-outlined text-red-600 mr-2">cancel</span>
        <span class="text-red-800 font-medium">訂單已取消</span>
      </div>
    `;
  }
  
  return `
    <div class="flex items-center justify-between">
      ${statusFlow.map((step, index) => {
        const isCompleted = index <= currentIndex;
        const isCurrent = index === currentIndex;
        
        return `
          <div class="flex flex-col items-center flex-1 ${index < statusFlow.length - 1 ? 'relative' : ''}">
            <div class="w-8 h-8 rounded-full flex items-center justify-center ${
              isCompleted 
                ? (isCurrent ? 'bg-green-500 text-white animate-pulse' : 'bg-green-500 text-white')
                : 'bg-gray-200 text-gray-400'
            }">
              <span class="material-symbols-outlined text-sm">${step.icon}</span>
            </div>
            <span class="text-xs mt-1 text-center ${isCompleted ? 'text-green-600 font-medium' : 'text-gray-400'}">${step.label}</span>
            ${index < statusFlow.length - 1 ? `
              <div class="absolute top-4 left-1/2 w-full h-0.5 ${
                index < currentIndex ? 'bg-green-500' : 'bg-gray-200'
              }" style="transform: translateX(50%); z-index: -1;"></div>
            ` : ''}
          </div>
        `;
      }).join('')}
    </div>
  `;
}

// 訂單查詢彈窗背景點擊關閉
document.getElementById('order-tracking-modal').addEventListener('click', function(e) {
  if (e.target === this) {
    closeOrderTrackingModal();
  }
});

// 手機號碼輸入框按 Enter 鍵搜尋
document.addEventListener('DOMContentLoaded', function() {
  document.getElementById('order-search-phone').addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
      searchOrders();
    }
  });
});

// 📦 商品搜尋和篩選功能
let currentSearchTerm = '';
let currentCategory = 'all';
let allProducts = [];

// 初始化商品搜尋功能
function initProductSearch() {
  // 獲取所有商品元素
  allProducts = Array.from(document.querySelectorAll('.product-item'));
  
  // 初始化搜尋框狀態
  updateSearchUI();
}

// 搜尋商品
function searchProducts(searchTerm) {
  currentSearchTerm = searchTerm.toLowerCase().trim();
  
  // 更新清除按鈕顯示狀態
  const clearBtn = document.getElementById('clear-search-btn');
  if (currentSearchTerm) {
    clearBtn.classList.remove('opacity-0', 'pointer-events-none');
    clearBtn.classList.add('opacity-100', 'pointer-events-auto');
  } else {
    clearBtn.classList.add('opacity-0', 'pointer-events-none');
    clearBtn.classList.remove('opacity-100', 'pointer-events-auto');
  }
  
  // 執行篩選
  filterAndDisplayProducts();
}

// 分類篩選
function filterProducts(category) {
  currentCategory = category;
  
  // 更新導航按鈕狀態
  updateNavButtons(category);
  
  // 執行篩選
  filterAndDisplayProducts();
}

// 篩選並顯示商品
function filterAndDisplayProducts() {
  let visibleCount = 0;
  
  allProducts.forEach(product => {
    let isVisible = true;
    
    // 檢查分類篩選
    if (currentCategory !== 'all') {
      const productCategories = product.dataset.category || '';
      if (!productCategories.includes(currentCategory)) {
        isVisible = false;
      }
    }
    
    // 檢查搜尋篩選
    if (currentSearchTerm && isVisible) {
      const searchableText = product.dataset.searchable || '';
      const productName = product.dataset.name || '';
      
      if (!searchableText.includes(currentSearchTerm) && 
          !productName.toLowerCase().includes(currentSearchTerm)) {
        isVisible = false;
      }
    }
    
    // 顯示或隱藏商品
    if (isVisible) {
      product.style.display = 'block';
      // 添加淡入動畫
      product.style.opacity = '0';
      setTimeout(() => {
        product.style.opacity = '1';
      }, visibleCount * 50); // 錯開動畫時間
      visibleCount++;
    } else {
      product.style.display = 'none';
    }
  });
  
  // 更新搜尋結果資訊
  updateSearchInfo(visibleCount);
  
  // 顯示無結果提示
  showNoResultsMessage(visibleCount === 0);
}

// 更新搜尋結果資訊
function updateSearchInfo(count) {
  const searchInfo = document.getElementById('search-info');
  const resultCount = document.getElementById('search-result-count');
  
  if (currentSearchTerm || currentCategory !== 'all') {
    searchInfo.classList.remove('hidden');
    
    let message = `找到 ${count} 項商品`;
    if (currentSearchTerm) {
      message += ` (搜尋: "${currentSearchTerm}")`;
    }
    if (currentCategory !== 'all') {
      const categoryNames = {
        'new': '最新商品',
        'hot': '熱銷商品',
        'recommended': '最佳推薦',
        'sale': '限時特惠'
      };
      message += ` (分類: ${categoryNames[currentCategory] || currentCategory})`;
    }
    
    resultCount.textContent = message;
  } else {
    searchInfo.classList.add('hidden');
  }
}

// 顯示無結果提示
function showNoResultsMessage(show) {
  let noResultsDiv = document.getElementById('no-results-message');
  
  if (show && (currentSearchTerm || currentCategory !== 'all')) {
    if (!noResultsDiv) {
      // 創建無結果提示
      noResultsDiv = document.createElement('div');
      noResultsDiv.id = 'no-results-message';
      noResultsDiv.className = 'text-center py-12 px-4';
      noResultsDiv.innerHTML = `
        <div class="text-6xl mb-4">🔍</div>
        <h3 class="text-lg font-bold text-gray-900 mb-2">找不到相關商品</h3>
        <p class="text-gray-600 mb-4">試試調整搜尋關鍵字或選擇其他分類</p>
        <button onclick="clearSearch()" class="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition-colors">
          清除篩選條件
        </button>
      `;
      
      document.getElementById('products-container').appendChild(noResultsDiv);
    }
    noResultsDiv.style.display = 'block';
  } else if (noResultsDiv) {
    noResultsDiv.style.display = 'none';
  }
}

// 更新導航按鈕狀態
function updateNavButtons(activeCategory) {
  const navButtons = document.querySelectorAll('.nav-btn');
  
  navButtons.forEach(btn => {
    const btnCategory = btn.dataset.category;
    
    if (btnCategory === activeCategory) {
      // 激活狀態
      btn.classList.remove('border-transparent', 'text-gray-500');
      btn.classList.add('border-green-500', 'text-green-600', 'font-semibold', 'active');
      btn.classList.remove('font-medium');
    } else {
      // 非激活狀態
      btn.classList.add('border-transparent', 'text-gray-500', 'font-medium');
      btn.classList.remove('border-green-500', 'text-green-600', 'font-semibold', 'active');
    }
  });
}

// 清除搜尋
function clearSearch() {
  currentSearchTerm = '';
  currentCategory = 'all';
  
  // 重置搜尋框
  document.getElementById('product-search').value = '';
  
  // 重置UI狀態
  updateNavButtons('all');
  updateSearchUI();
  
  // 顯示所有商品
  filterAndDisplayProducts();
}

// 更新搜尋UI狀態
function updateSearchUI() {
  const clearBtn = document.getElementById('clear-search-btn');
  clearBtn.classList.add('opacity-0', 'pointer-events-none');
  clearBtn.classList.remove('opacity-100', 'pointer-events-auto');
}

// 處理搜尋框按鍵事件
function handleSearchKeypress(event) {
  if (event.key === 'Enter') {
    event.preventDefault();
    // Enter鍵時失去焦點，觸發手機鍵盤收起
    event.target.blur();
  }
}

// 頁面載入完成後初始化搜尋功能
document.addEventListener('DOMContentLoaded', function() {
  // 延遲初始化，確保所有商品都已載入
  setTimeout(() => {
    initProductSearch();
  }, 100);
});

</script>

</body>
</html>