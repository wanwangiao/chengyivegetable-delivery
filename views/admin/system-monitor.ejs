<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>系統監控 - 誠憶鮮蔬管理系統</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        .status-healthy { color: #10B981; }
        .status-warning { color: #F59E0B; }
        .status-critical { color: #EF4444; }
        .metric-card {
            background: linear-gradient(145deg, #ffffff, #f3f4f6);
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body class="bg-gray-50">
    <!-- 導航欄 -->
    <nav class="bg-white shadow-sm border-b">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
                <div class="flex items-center">
                    <a href="/admin" class="text-gray-600 hover:text-gray-900 mr-4">
                        <span class="material-icons">arrow_back</span>
                    </a>
                    <h1 class="text-xl font-semibold text-gray-900">系統監控面板</h1>
                </div>
                <div class="flex items-center space-x-4">
                    <span class="text-sm text-gray-500" id="lastUpdate">最後更新：載入中...</span>
                    <button onclick="refreshData()" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-md text-sm font-medium">
                        <span class="material-icons text-sm mr-1">refresh</span>
                        重新整理
                    </button>
                </div>
            </div>
        </div>
    </nav>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        
        <!-- 系統狀態總覽 -->
        <div class="mb-8">
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                <!-- 系統健康狀態 -->
                <div class="metric-card p-6 rounded-lg">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <span class="material-icons text-3xl" id="healthIcon">favorite</span>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">系統狀態</p>
                            <p class="text-lg font-semibold" id="healthStatus">載入中...</p>
                        </div>
                    </div>
                </div>

                <!-- 運行時間 -->
                <div class="metric-card p-6 rounded-lg">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <span class="material-icons text-3xl text-blue-500">schedule</span>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">運行時間</p>
                            <p class="text-lg font-semibold text-gray-900" id="uptime">載入中...</p>
                        </div>
                    </div>
                </div>

                <!-- 總請求數 -->
                <div class="metric-card p-6 rounded-lg">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <span class="material-icons text-3xl text-purple-500">bar_chart</span>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">總請求數</p>
                            <p class="text-lg font-semibold text-gray-900" id="totalRequests">載入中...</p>
                        </div>
                    </div>
                </div>

                <!-- 平均響應時間 -->
                <div class="metric-card p-6 rounded-lg">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <span class="material-icons text-3xl text-orange-500">speed</span>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">平均響應時間</p>
                            <p class="text-lg font-semibold text-gray-900" id="avgResponse">載入中...</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- 詳細指標 -->
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            
            <!-- 記憶體使用量圖表 -->
            <div class="bg-white p-6 rounded-lg shadow">
                <h3 class="text-lg font-medium text-gray-900 mb-4">記憶體使用量趨勢</h3>
                <canvas id="memoryChart" width="400" height="200"></canvas>
            </div>

            <!-- 系統詳細資訊 -->
            <div class="bg-white p-6 rounded-lg shadow">
                <h3 class="text-lg font-medium text-gray-900 mb-4">系統詳細資訊</h3>
                <div class="space-y-4">
                    <div class="flex justify-between">
                        <span class="text-gray-600">錯誤率：</span>
                        <span id="errorRate" class="font-medium">載入中...</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-gray-600">目前記憶體：</span>
                        <span id="currentMemory" class="font-medium">載入中...</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-gray-600">總記憶體：</span>
                        <span id="totalMemory" class="font-medium">載入中...</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-gray-600">系統RSS：</span>
                        <span id="rssMemory" class="font-medium">載入中...</span>
                    </div>
                </div>
                
                <!-- 系統問題列表 -->
                <div class="mt-6">
                    <h4 class="text-md font-medium text-gray-900 mb-2">系統狀態詳情</h4>
                    <div id="systemIssues" class="space-y-2">
                        <!-- 動態載入 -->
                    </div>
                </div>
            </div>
        </div>

        <!-- 實時日誌 -->
        <div class="mt-8 bg-white p-6 rounded-lg shadow">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-medium text-gray-900">系統警告日誌</h3>
                <button onclick="clearLogs()" class="text-sm text-red-600 hover:text-red-700">清除日誌</button>
            </div>
            <div id="systemLogs" class="bg-gray-900 text-green-400 p-4 rounded-md h-64 overflow-y-auto font-mono text-sm">
                <!-- 動態載入日誌 -->
            </div>
        </div>
    </div>

    <script>
        let memoryChart;
        let logData = [];

        // 初始化圖表
        function initChart() {
            const ctx = document.getElementById('memoryChart').getContext('2d');
            memoryChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Heap Used (MB)',
                        data: [],
                        borderColor: 'rgb(59, 130, 246)',
                        backgroundColor: 'rgba(59, 130, 246, 0.1)',
                        tension: 0.4
                    }, {
                        label: 'RSS (MB)',
                        data: [],
                        borderColor: 'rgb(239, 68, 68)',
                        backgroundColor: 'rgba(239, 68, 68, 0.1)',
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: '記憶體 (MB)'
                            }
                        }
                    }
                }
            });
        }

        // 載入性能資料
        async function loadPerformanceData() {
            try {
                const response = await fetch('/api/performance');
                const data = await response.json();
                
                if (data.success) {
                    updateUI(data.performance);
                    updateChart(data.performance);
                    document.getElementById('lastUpdate').textContent = `最後更新：${new Date().toLocaleString()}`;
                }
            } catch (error) {
                console.error('載入性能資料失敗:', error);
                addLog('ERROR', '無法載入性能資料: ' + error.message);
            }
        }

        // 更新UI顯示
        function updateUI(performance) {
            // 系統健康狀態
            const healthStatus = performance.healthStatus.status;
            const healthElement = document.getElementById('healthStatus');
            const healthIcon = document.getElementById('healthIcon');
            
            healthElement.className = `text-lg font-semibold status-${healthStatus}`;
            healthElement.textContent = healthStatus === 'healthy' ? '正常' : 
                                       healthStatus === 'warning' ? '警告' : '嚴重';
            
            healthIcon.className = `material-icons text-3xl status-${healthStatus}`;
            
            // 基本指標
            document.getElementById('uptime').textContent = formatUptime(performance.uptime);
            document.getElementById('totalRequests').textContent = performance.totalRequests.toLocaleString();
            document.getElementById('avgResponse').textContent = performance.averageResponseTime;
            document.getElementById('errorRate').textContent = performance.errorRate;
            
            // 記憶體資訊
            if (performance.currentMemory) {
                document.getElementById('currentMemory').textContent = performance.currentMemory.heapUsed;
                document.getElementById('totalMemory').textContent = performance.currentMemory.heapTotal;
                document.getElementById('rssMemory').textContent = performance.currentMemory.rss;
            }
            
            // 系統問題
            const issuesContainer = document.getElementById('systemIssues');
            issuesContainer.innerHTML = '';
            performance.healthStatus.issues.forEach(issue => {
                const issueElement = document.createElement('div');
                issueElement.className = `p-2 rounded text-sm ${
                    issue.includes('正常') ? 'bg-green-50 text-green-700' : 'bg-yellow-50 text-yellow-700'
                }`;
                issueElement.textContent = issue;
                issuesContainer.appendChild(issueElement);
            });
        }

        // 更新圖表
        function updateChart(performance) {
            // 這裡需要實際的時間序列數據，暫時用模擬數據
            if (performance.currentMemory) {
                const now = new Date().toLocaleTimeString();
                const heapUsed = parseInt(performance.currentMemory.heapUsed);
                const rss = parseInt(performance.currentMemory.rss);
                
                memoryChart.data.labels.push(now);
                memoryChart.data.datasets[0].data.push(heapUsed);
                memoryChart.data.datasets[1].data.push(rss);
                
                // 只保留最近20個數據點
                if (memoryChart.data.labels.length > 20) {
                    memoryChart.data.labels.shift();
                    memoryChart.data.datasets[0].data.shift();
                    memoryChart.data.datasets[1].data.shift();
                }
                
                memoryChart.update();
            }
        }

        // 格式化運行時間
        function formatUptime(seconds) {
            const days = Math.floor(seconds / 86400);
            const hours = Math.floor((seconds % 86400) / 3600);
            const minutes = Math.floor((seconds % 3600) / 60);
            
            if (days > 0) return `${days}天 ${hours}小時`;
            if (hours > 0) return `${hours}小時 ${minutes}分鐘`;
            return `${minutes}分鐘`;
        }

        // 新增日誌
        function addLog(level, message) {
            const timestamp = new Date().toLocaleString();
            const logEntry = `[${timestamp}] ${level}: ${message}`;
            logData.push(logEntry);
            
            // 只保留最新100條日誌
            if (logData.length > 100) {
                logData.shift();
            }
            
            const logsContainer = document.getElementById('systemLogs');
            logsContainer.innerHTML = logData.map(log => 
                `<div class="${log.includes('ERROR') ? 'text-red-400' : 
                             log.includes('WARN') ? 'text-yellow-400' : 'text-green-400'}">${log}</div>`
            ).join('');
            
            logsContainer.scrollTop = logsContainer.scrollHeight;
        }

        // 清除日誌
        function clearLogs() {
            logData = [];
            document.getElementById('systemLogs').innerHTML = '';
        }

        // 重新整理資料
        function refreshData() {
            loadPerformanceData();
            addLog('INFO', '手動重新整理監控資料');
        }

        // 初始化
        document.addEventListener('DOMContentLoaded', function() {
            initChart();
            loadPerformanceData();
            
            // 每30秒自動更新
            setInterval(loadPerformanceData, 30000);
            
            addLog('INFO', '系統監控面板已啟動');
        });
    </script>
</body>
</html>